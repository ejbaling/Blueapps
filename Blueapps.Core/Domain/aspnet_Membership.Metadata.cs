//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace Blueapps.Core.Domain
{
    [MetadataType(typeof(Metadata))]
    public partial class aspnet_Membership
    {
        #region Metadata
    
    	/// <summary>
    	/// Metadata internal class used for Data Annotations
    	/// </summary>
    	internal class Metadata
        {
            #region Primitive Properties
            
            [Display(Name = "Application Id")]
            [Required(ErrorMessage = "Application Id is Required.")]	
            public virtual System.Guid ApplicationId { get; set; }	
            
            [Display(Name = "User Id")]
            [Required(ErrorMessage = "User Id is Required.")]	
            public virtual System.Guid UserId { get; set; }	
            
            [Display(Name = "Password")]
            [Required(ErrorMessage = "Password is Required.")]
            [StringLength(128, ErrorMessage = "Password must be under 128 characters.")]	
            public virtual string Password { get; set; }	
            
            [Display(Name = "Password Format")]
            [Required(ErrorMessage = "Password Format is Required.")]	
            public virtual int PasswordFormat { get; set; }	
            
            [Display(Name = "Password Salt")]
            [Required(ErrorMessage = "Password Salt is Required.")]
            [StringLength(128, ErrorMessage = "Password Salt must be under 128 characters.")]	
            public virtual string PasswordSalt { get; set; }	
            
            [Display(Name = "Mobile PIN")]
            [StringLength(16, ErrorMessage = "Mobile PIN must be under 16 characters.")]	
            public virtual string MobilePIN { get; set; }	
            
            [Display(Name = "Email")]
            [StringLength(256, ErrorMessage = "Email must be under 256 characters.")]	
            public virtual string Email { get; set; }	
            
            [Display(Name = "Lowered Email")]
            [StringLength(256, ErrorMessage = "Lowered Email must be under 256 characters.")]	
            public virtual string LoweredEmail { get; set; }	
            
            [Display(Name = "Password Question")]
            [StringLength(256, ErrorMessage = "Password Question must be under 256 characters.")]	
            public virtual string PasswordQuestion { get; set; }	
            
            [Display(Name = "Password Answer")]
            [StringLength(128, ErrorMessage = "Password Answer must be under 128 characters.")]	
            public virtual string PasswordAnswer { get; set; }	
            
            [Display(Name = "Is Approved")]
            [Required(ErrorMessage = "Is Approved is Required.")]	
            public virtual bool IsApproved { get; set; }	
            
            [Display(Name = "Is Locked Out")]
            [Required(ErrorMessage = "Is Locked Out is Required.")]	
            public virtual bool IsLockedOut { get; set; }	
            
            [Display(Name = "Create Date")]
            [Required(ErrorMessage = "Create Date is Required.")]	
            public virtual System.DateTime CreateDate { get; set; }	
            
            [Display(Name = "Last Login Date")]
            [Required(ErrorMessage = "Last Login Date is Required.")]	
            public virtual System.DateTime LastLoginDate { get; set; }	
            
            [Display(Name = "Last Password Changed Date")]
            [Required(ErrorMessage = "Last Password Changed Date is Required.")]	
            public virtual System.DateTime LastPasswordChangedDate { get; set; }	
            
            [Display(Name = "Last Lockout Date")]
            [Required(ErrorMessage = "Last Lockout Date is Required.")]	
            public virtual System.DateTime LastLockoutDate { get; set; }	
            
            [Display(Name = "Failed Password Attempt Count")]
            [Required(ErrorMessage = "Failed Password Attempt Count is Required.")]	
            public virtual int FailedPasswordAttemptCount { get; set; }	
            
            [Display(Name = "Failed Password Attempt Window Start")]
            [Required(ErrorMessage = "Failed Password Attempt Window Start is Required.")]	
            public virtual System.DateTime FailedPasswordAttemptWindowStart { get; set; }	
            
            [Display(Name = "Failed Password Answer Attempt Count")]
            [Required(ErrorMessage = "Failed Password Answer Attempt Count is Required.")]	
            public virtual int FailedPasswordAnswerAttemptCount { get; set; }	
            
            [Display(Name = "Failed Password Answer Attempt Window Start")]
            [Required(ErrorMessage = "Failed Password Answer Attempt Window Start is Required.")]	
            public virtual System.DateTime FailedPasswordAnswerAttemptWindowStart { get; set; }	
            
            [Display(Name = "Comment")]	
            public virtual string Comment { get; set; }	

            #endregion
    
    
            #region Navigation Properties
            	
            public virtual aspnet_Applications aspnet_Applications { get; set; }
            	
            public virtual aspnet_Users aspnet_Users { get; set; }

            #endregion
    	}

        #endregion
    }
}
